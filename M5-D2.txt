REST => architecture style for designing networked applications. It stands for Representational State Transfer

ExpressJS => most popular Node Framework 

REST is primarily ran over HTTP and is commonly used in Web APIs
ExpressJs will boosts developing APIs a lot 

Rest endpoints / CRUD with expressJs

RESTful = representational State transfer

API = Application Programming Interface

Use meaningful http methods
Sensible resources names(plural:/users,/students/12345/comments)
Use JSON everywhere is possible 
Use proper error/status codes (improve the clarity of the app)

GET - RES 200
POST - RES 201
PUT - RES 200
Delete - RES 204-No content

CREATE => POST/users (+BODY)
READ => GET/users (+optional Query Parameters)
READ => GET/users/:id
UPDATE => PUT /users/:ID(+BODY)
DELTE => DELETE /users/:ID

Package.json 

make gitignore file
make src folder
server.js file (configure and run for server)

npm init -y

install expressJs
npm install express --save

"type":"module", //in package.json/ allows new syntax

import express from "express" // new import syntax

const express = require("express") //old import syntax

const server = express()

server.listen(3001, () => {
	console.log("Server is running on port:" ,3001)
})

noder ./src/server.js

npm i -D nodemon@2.0.7 // automaticly initialize server 

"dev": "nodemon -e js ./src/server.js"

npm run dev 

create studets folder and index.js

